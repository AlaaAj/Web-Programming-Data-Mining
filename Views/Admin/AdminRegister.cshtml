@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;

@model HeartDisease.Models.User

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="row justify-content-md-center">
    <div class="col-md-5">
        @using (Html.BeginForm())
        {
            //  @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-header">
                    <div class="card-title"><h3><b>Register</b></h3></div>
                </div>
                <div class="card-body">

                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName)
                        @Html.TextBoxFor(m => m.UserName, "", new { @class = "form-control", @placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "badge badge-danger" })
                    </div>
                     
                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleName)
                   
                            @Html.DropDownListFor(model => model.RoleName,
                                new List<SelectListItem> {
                                     new SelectListItem { Value = "Admin" , Text = "Admin" },
                                     new SelectListItem { Value = "Manager" , Text = "Manager" },
                                  },
                                new { @class = "myselect" })
                            @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                       
                    </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, "", new { @class = "form-control", @placeholder = "Email" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "badge badge-danger" })
                            @if (ViewBag.error != null)
                            {
                                <span class="badge badge-danger">@ViewBag.error</span>
                            }
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password)
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "badge badge-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Confirm Password")
                            @Html.PasswordFor(m => m.F_Password, new { @class = "form-control", @placeholder = "Password Confirm" })
                            @Html.ValidationMessageFor(m => m.F_Password, "", new { @class = "badge badge-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Gender)
                            <div class="form-group">
                                <span>Male: </span> @Html.RadioButtonFor(m => m.Gender, "Male")
                                <span> | Female: </span> @Html.RadioButtonFor(m => m.Gender, "Female")
                            </div>
                            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "badge badge-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Age)
                            @Html.TextBoxFor(m => m.Age, new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(m => m.Age, "", new { @class = "badge badge-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Address)
                            @Html.TextBoxFor(m => m.Address, "", new { @class = "form-control", @placeholder = "Country , City , Street N" })
                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "badge badge-danger" })
                        </div>

                        <div class="form-group">
                            @Html.Captcha("Try Another", "Enter the text you see above", 3, "Is requierd field", true)
                            <p class="text-danger">@ViewBag.ErrorMessage</p>
                        </div>
                        <div class="form-group">
                            <input type="submit" name="submit" class="btn btn-danger" value="Register" />
                        </div>
                    </div>
                </div>

        }
    </div>
</div>